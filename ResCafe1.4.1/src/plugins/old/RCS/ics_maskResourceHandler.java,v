head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	99.10.21.22.18.23;	author gbsmith;	state Exp;
branches;
next	1.2;

1.2
date	99.10.04.22.28.56;	author gbsmith;	state Exp;
branches;
next	1.1;

1.1
date	99.09.30.05.28.03;	author gbsmith;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Added Copyright notice. Made class imports more explicit.
@
text
@/* $Header: /home/gbsmith/projects/MacResReader/ResCafe/src/plugins/RCS/ics_maskResourceHandler.java,v 1.2 1999/10/04 22:28:56 gbsmith Exp gbsmith $ */

import com.sun.jimi.core.Jimi; // JIMI - tools for image I/O

import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.JTable;

import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

import java.awt.BorderLayout;
import java.awt.Image;

import java.awt.image.IndexColorModel;
import java.awt.image.MemoryImageSource;

import java.io.File;

import ResourceManager.*;

/*=======================================================================*/
/*
 * $Log: ics_maskResourceHandler.java,v $
 * Revision 1.2  1999/10/04 22:28:56  gbsmith
 * Adapted to new init technique. Implemented save method.
 *
 * Revision 1.1  1999/09/30 05:28:03  gbsmith
 * Initial revision
 *
 */

/*=======================================================================*/
/* Copyright (c) 1999 by G. Brannon Smith -- All Rights Reserved         */
/*=======================================================================*/

/*=======================================================================*/
public class ics_maskResourceHandler extends MacResourceHandler
{
   /*--- Data -----------------------------------------------------------*/
   JList resList;
   JTable resTable;
   private static final String[] columnNames = {
      "ResID", "Name", "Size", "Icon", "Mask" };
   IndexColorModel icm;
   Image icons[];
   Image masks[];
   TableCellRenderer renderer = new IconRenderer();

   /*------ RCS ------------------------------------------7---------------*/
   static final String rcsid = "$Id: ics_maskResourceHandler.java,v 1.2 1999/10/04 22:28:56 gbsmith Exp gbsmith $";

   /*--- Methods --------------------------------------------------------*/
   public String[] getTypes()
   {
      return new String[]{"ics#"};
   }

   /*--------------------------------------------------------------------*/
   public void init( )
   {
      int i, j, b;
      MemoryImageSource mis;
      byte rawData[];
      byte iconData[];
      byte maskData[];

      Resource myResArray[] = resData.getResArray();

      icm = MacStandard16Palette.getColorModel();

      icons = new Image[myResArray.length];
      masks = new Image[myResArray.length];

      for( i = 0; i < myResArray.length; i++)
      {
         rawData = myResArray[i].getData();

         // Grab icon data
         iconData = new byte[256];
         for ( j = 0; j < 32; j++)
            for ( b = 0; b < 8; b++)
               iconData[j*8+b] = (byte)((rawData[j] &
                                        (0x80 >>> b)) > 0? 0x0F: 0x00);

         mis = new MemoryImageSource(16, 16, icm, iconData, 0, 16);
         icons[i] = createImage(mis);

         // Grab mask data
         maskData = new byte[256];
         for ( j = 0; j < 32; j++)
            for ( b = 0; b < 8; b++)
               maskData[j*8+b] = (byte)((rawData[j+32] &
                                        (0x80 >>> b)) > 0? 0x0F: 0x00);

         mis = new MemoryImageSource(16, 16, icm, maskData, 0, 16);
         masks[i] = createImage(mis);
      }
   }

   /*--------------------------------------------------------------------*/
   public void display( )
   {
      int i, j, b;
      TableColumn tc;
      DefaultTableModel tmpModel;

      Resource myResArray[] = resData.getResArray();
      setLayout(new BorderLayout());
      tmpModel = new DefaultTableModel(columnNames, myResArray.length);

      for( i = 0; i < myResArray.length; i++)
      {
         // "ResID", "Name", "Size", "Icon", "Mask"
         tmpModel.setValueAt(new Short(myResArray[i].getID()),  i, 0);
         tmpModel.setValueAt(myResArray[i].getName(),           i, 1);
         tmpModel.setValueAt(new Integer(myResArray[i].size()), i, 2);
         tmpModel.setValueAt(icons[i],                          i, 3);
         tmpModel.setValueAt(masks[i],                          i, 4);
      }

      resTable = new JTable(tmpModel);
      resTable.setRowHeight(20);
      tc = resTable.getColumn("Icon");
      tc.setCellRenderer(renderer);

      tc = resTable.getColumn("Mask");
      tc.setCellRenderer(renderer);

      JScrollPane rtsp = new JScrollPane(resTable);
      add(rtsp, "Center");
   }

   /*--------------------------------------------------------------------*/
   public void save ( File savedir )
   {
      StringBuffer tmpfilename;
      String filename;
      String saveType;

      if(resData == null)
      {
         System.err.println("ERROR: No resources to save");
         return;
      }

      Resource myResArray[] = resData.getResArray();
      saveType = resData.getID();

      System.out.println("Saving resources of type \'" + saveType + "\'");
      // Icons
      for(int i=0; i < myResArray.length; i++)
      {
         tmpfilename = new StringBuffer(savedir.getPath());
         tmpfilename.append( File.separator + myResArray[i].getID() );
         if(myResArray[i].getName() != null)
            tmpfilename.append("_" + myResArray[i].getName());
         tmpfilename.append(".xpm");
         filename = tmpfilename.toString().replace(' ', '_');

         //System.out.println("\tSaving \'" + filename + "\'...");
         try
         {
            Jimi.putImage(icons[i], filename);
         } catch (Exception whatever) {
            System.err.println("ERROR: Got exception " + whatever );
         }
      }

      // Masks
      for(int i=0; i < myResArray.length; i++)
      {
         tmpfilename = new StringBuffer(savedir.getPath());
         tmpfilename.append( File.separator + myResArray[i].getID() );
         if(myResArray[i].getName() != null)
            tmpfilename.append("_" + myResArray[i].getName());
         tmpfilename.append("_mask");
         tmpfilename.append(".xpm");
         filename = tmpfilename.toString().replace(' ', '_');

         //System.out.println("\tSaving \'" + filename + "\'...");
         try
         {
            Jimi.putImage(masks[i], filename);
         } catch (Exception whatever) {
            System.err.println("ERROR: Got exception " + whatever );
         }
      }
   }
}
@


1.2
log
@Adapted to new init technique. Implemented save method.
@
text
@d1 17
a17 1
/* $Header: /home/gbsmith/projects/MacResReader/java/src/RCS/ics_maskResourceHandler.java,v 1.1 1999/09/30 05:28:03 gbsmith Exp gbsmith $ */
a18 5
import com.sun.jimi.core.*; // JIMI - tools for image I/O
import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import java.awt.image.*;
d23 1
d26 3
d34 3
d52 1
a52 1
   static final String rcsid = "$Id$";
d55 1
a55 1
   public ics_maskResourceHandler()
d57 1
a57 1
      types = new String[]{"ics#"};
d61 1
a61 1
   public void init(String inType, ResourceType inResData )
a64 1
      TableColumn tc;
d69 1
a69 1
      resdata = inResData;
d71 1
a71 1
      Resource myResArray[] = resdata.getResArray();
a72 5
      setLayout(new BorderLayout());
      icm = new IndexColorModel(8, 16,
                                MacStandard16Palette.getReds(),
                                MacStandard16Palette.getGreens(),
                                MacStandard16Palette.getBlues());
a75 3
      DefaultTableModel tmpModel =
         new DefaultTableModel(columnNames, myResArray.length);

a77 4
         tmpModel.setValueAt(new Short(myResArray[i].getID()),  i, 0);
         tmpModel.setValueAt(myResArray[i].getName(),           i, 1);
         tmpModel.setValueAt(new Integer(myResArray[i].size()), i, 2);

a88 1
         tmpModel.setValueAt(icons[i], i, 3);
d99 22
a120 1
         tmpModel.setValueAt(masks[i], i, 4);
d136 1
a136 1
   public void save ( String inType, File savedir )
d140 1
d142 1
a142 1
      if(resdata == null)
d144 1
a144 2
         System.err.println("ERROR: No resources of type \'" + inType +
                            "\' to save");
d148 2
a149 1
      Resource myResArray[] = resdata.getResArray();
d151 1
a151 1
      System.out.println("Saving resources of type \'" + inType + "\'");
d161 1
d181 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* $Header$ */
d3 1
d8 1
d10 1
d13 4
a16 1
 * $Log$
d23 1
a23 3
   private static String types[] = {"ics#"};

   Resource resdata[];
d26 2
a27 1
   private static final String[] columnNames = { "ResID", "Name", "Size", "Icon", "Mask"};
d33 9
d43 1
a43 1
   public void init( String inType, Resource inResData[] )
d53 3
d61 2
a62 2
      icons = new Image[resdata.length];
      masks = new Image[resdata.length];
d65 1
a65 1
         new DefaultTableModel(columnNames, resdata.length);
d67 1
a67 1
      for( i = 0; i < resdata.length; i++)
d69 3
a71 3
         tmpModel.setValueAt(new Short(resdata[i].getID()),  i, 0);
         tmpModel.setValueAt(resdata[i].getName(),           i, 1);
         tmpModel.setValueAt(new Integer(resdata[i].size()), i, 2);
d73 1
a73 1
         rawData = resdata[i].getData();
d108 54
@
